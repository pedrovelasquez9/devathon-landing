---
import { Image } from 'astro:assets';
import JudgeCard from '../../components/astro/JudgeCard/index.astro';
import { devathonData } from '../../data/devathon-ix-edition';
import type { DevathonMenthor, Judge, Team, TeamMember } from '../../interfaces/DevathonVIEdition.interface';
import Layout from '../../layouts/Layout.astro';
import './styles.css';

import GryffindorImage from '../../components/svelte/assets/gryffindor.webp';
import HufflepuffImage from '../../components/svelte/assets/hufflepuff.webp';
import RavenclawImage from '../../components/svelte/assets/ravenclaw.webp';
import SlytherinImage from '../../components/svelte/assets/slytherin.webp';

const { teams, judges, menthors } = devathonData;
const teamClases = {
  Gryffindor: {
    border: 'team-card--gryffindor',
    color: 'team-card__name--gryffindor',
    header: ''
  },
  Slytherin: {
    border: 'team-card--slytherin',
    color: 'team-card__name--slytherin',
    header: 'team-card__header--slytherin'
  },
  Ravenclaw: {
    border: 'team-card--ravenclaw',
    color: 'team-card__name--ravenclaw',
    header: 'team-card__header--avenclaw'
  },
  Hufflepuff: {
    border: 'team-card--hufflepuff',
    color: 'team-card__name--hufflepuff',
    header: 'team-card__header--hufflepuff'
  }
};

const TeamImages = {
  Gryffindor: GryffindorImage,
  Slytherin: SlytherinImage,
  Ravenclaw: RavenclawImage,
  Hufflepuff: HufflepuffImage
};
---

<Layout title="Devathon: IX edición">
  <main class="devathonIX devathonIX-container">
    <section class="teams wrapper">
      <h1 class="title">Devathon: IX edición</h1>
      <h1 class="title title--secondary">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="teams__icon"
          viewBox="0 0 24 24"
          fill="none"
          stroke="#fbbf24"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-wand-sparkles h-6 w-6 text-amber-400"
          ><path
            d="m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72"
          ></path><path d="m14 7 3 3"></path><path d="M5 6v4"></path><path d="M19 14v4"></path><path
            d="M10 2v2"></path><path d="M7 8H3"></path><path d="M21 16h-4"></path><path d="M11 3H9"
          ></path></svg
        >
        Las Casas Participantes

        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="teams__icon"
          viewBox="0 0 24 24"
          fill="none"
          stroke="#fbbf24"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-wand-sparkles h-6 w-6 text-amber-400"
          ><path
            d="m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72"
          ></path><path d="m14 7 3 3"></path><path d="M5 6v4"></path><path d="M19 14v4"></path><path
            d="M10 2v2"></path><path d="M7 8H3"></path><path d="M21 16h-4"></path><path d="M11 3H9"
          ></path></svg
        >
      </h1>
      <div class="teams__container">
        {
          teams.map((teamData: Team): Object => {
            const { name, team, id, isWinner, isRetired, project, frontendRepo, backendRepo, members } =
              teamData;
            const teamClasses = teamClases[team as keyof typeof teamClases] || { border: '', color: '' };
            const teamImage = TeamImages[team as keyof typeof TeamImages] || '';
            return (
              <section class={`teams__card team-card ${teamClasses.border}`}>
                <article class={`team-card__header ${teamClasses.header}`}>
                  <div class="team-card__header__info">
                    <Image
                      src={teamImage}
                      srcset={teamImage.src}
                      width={200}
                      height={200}
                      class="team-card__number"
                      alt={name}
                    />
                    <div class="team-card__name-container">
                      <h2 class={`team-card__name ${teamClasses.color}`}>{team}</h2>
                      <p class="team-card__subname">Valor, Fuerza, Osadía:</p>
                    </div>
                  </div>
                  <div>
                    <p class="team-card__project">
                      Proyecto Mágico: <span class="team-card__italic">Mapa del Merodeador Digital</span>
                    </p>
                  </div>
                </article>
                <div class="team-card__body">
                  <p class="team-card__subtitle">Magos y Brujas:</p>
                  <ul class="team-card__members">
                    {members?.map((member: TeamMember) => {
                      if (member.name) {
                        return (
                          <li class="team-card__member">
                            <Image
                              width={400}
                              height={400}
                              class="team-card__avatar"
                              src={member.img}
                              alt={member.name}
                            />

                            <a class="team-card__member-name" href={member.linkedin}>
                              {member.name}
                            </a>
                          </li>
                        );
                      }
                    })}
                  </ul>
                </div>

                <div class="team-card__repository">
                  <h3 class="repository-title">Pergaminos Mágicos:</h3>
                  <div class="team-card__repository-links">
                    <a class={`team-card__respostory-link`} href="#">
                      Repo
                    </a>
                    <a class="team-card__respostory-link" href="#">
                      Demo
                    </a>
                  </div>
                </div>
              </section>
            );
          })
        }
      </div>
    </section>
    <section class="wrapper">
      <h2 class="title menthors-title">
        <svg
          class="teams__icon"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="none"
          stroke="#fbbf24"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-book-open h-6 w-6 text-amber-400"
          ><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path
            d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path></svg
        >
        Profesores de Hogwarts
        <svg
          class="teams__icon"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="none"
          stroke="#fbbf24"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-book-open h-6 w-6 text-amber-400"
          ><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path
            d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path></svg
        >
      </h2>
      <div class="menthors">
        <p class="menthors__description">
          En esta edición, participaron desarrolladores Sr. de forma voluntaria con el rol de mentores para
          poder ayudar a los equipos con dudas y bloqueos técnicos, mi total agradecimiento y mención
          honorífica a los mentores que estuvieron presentes, atentos y siempre con buena vibra y disposición
          a ayudar a los equipos en el servidor de Discord:
        </p>
        <ul class="menthors__list">
          {
            menthors.map((menthor: DevathonMenthor) => {
              return (
                <li class="menthor">
                  <Image
                    width={200}
                    height={200}
                    class="menthor__avatar"
                    src={menthor.img}
                    alt={menthor.name}
                  />

                  <a class="menthor__link" href={menthor.linkedin}>
                    {menthor.name}
                  </a>
                </li>
              );
            })
          }
        </ul>
      </div>
    </section>

    <section class="edition-main-section wrapper">
      <h2 class="title judges-title">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-book-open h-6 w-6 text-amber-400"
          ><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path
            d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path></svg
        >
        Consejo de Magos
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-book-open h-6 w-6 text-amber-400"
          ><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path
            d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path></svg
        >
      </h2>
      <div class="sponsor-container">
        {
          judges.map((judge: Judge): Object => {
            const { name, networks, project, img } = judge;
            return <JudgeCard name={name} networks={networks} project={project} img={img} />;
          })
        }
      </div>
    </section>
    <section class="event-info-section wrapper">
      <h1>Acerca del evento</h1>
      <div class="event-info-container">
        <section class="evaluation-criteria">
          <h2>✍ Criterios de evaluación</h2>
          <ul class="evaluation-criteria__list">
            <li class="evaluation-criteria__item">
              ✅ Uso y gestión del repositorio: se evalúa el uso de git flow, revisión de PRs y mantenimiento
              de ramas principales, nomenclatura y buenas prácticas en general al trabajar con repositorios
              usando git y github.
            </li>
            <li class="evaluation-criteria__item">
              ✅ Nivel funcional del proyecto: se evalúa la cantidad de funcionalidades estables del proyecto
              final con respecto a su concepción/propuesta inicial.
            </li>
            <li class="evaluation-criteria__item">
              ✅ Nivel visual del proyecto: se evalúan aspectos visuales, UI en general, combinación de
              colores, ortografía, proporciones de secciones, uso del espacio en la web, etc.
            </li>
            <li class="evaluation-criteria__item">
              ✅ Nivel de accesibilidad del proyecto: se evalúan características de UX y accesibilidad como
              legibilidad del contenido, combinación de colores, uso de formularios, facilidad de uso del
              proyecto, etc.
            </li>
            <li class="evaluation-criteria__item">
              ✅ Nivel técnico del proyecto: en la review final, el sponsor podrá hacer preguntas de nivel
              técnico en cuanto a las consideraciones y stack usados por cada equipo para realizar su
              evaluación particular.
            </li>
            <li class="evaluation-criteria__item">
              ✅ Documentación del proyecto: documentación básica del proyecto (cómo levantarlo en local,
              dependencias y consideraciones que apliquen), diseño técnico con diagrama de flujo y acuerdo de
              interfaz con swagger, postman, etc.
            </li>
            <li class="evaluation-criteria__item">
              ✅ Modelado de entidades (BD): se podrá preguntar y revisar el modelo de la BD del proyecto en
              la review final para ver cómo se han estructurado las relaciones, se evaluará también el uso y
              cuidado de estándares, nomenclatura, bitácora, etc.
            </li>
            <li class="evaluation-criteria__item">
              ✅ Integración de proyecto y equipos: integración de front y back, comunicación de ambas partes
              del equipo para esta integración y funcionamiento de la app integrada.
            </li>
          </ul>
        </section>
      </div>
    </section>
  </main>
</Layout>
<script is:inline></script>
